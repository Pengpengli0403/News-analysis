{"remainingRequest":"G:\\Data_Science_2021-main\\Data_Science_2021-main\\vue_frontend\\node_modules\\babel-loader\\lib\\index.js!G:\\Data_Science_2021-main\\Data_Science_2021-main\\vue_frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!G:\\Data_Science_2021-main\\Data_Science_2021-main\\vue_frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\Data_Science_2021-main\\Data_Science_2021-main\\vue_frontend\\src\\components\\news.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\Data_Science_2021-main\\Data_Science_2021-main\\vue_frontend\\src\\components\\news.vue","mtime":1714922572424},{"path":"G:\\Data_Science_2021-main\\Data_Science_2021-main\\vue_frontend\\babel.config.js","mtime":1713683457144},{"path":"G:\\Data_Science_2021-main\\Data_Science_2021-main\\vue_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713684261118},{"path":"G:\\Data_Science_2021-main\\Data_Science_2021-main\\vue_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1713683950564},{"path":"G:\\Data_Science_2021-main\\Data_Science_2021-main\\vue_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713684261118},{"path":"G:\\Data_Science_2021-main\\Data_Science_2021-main\\vue_frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1713686760963}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0ZXh0VmFsdWU6ICcnLAogICAgICAvLyDnu5HlrprliLDmlofmnKzovpPlhaXmoYbnmoTmlbDmja4KICAgICAgZmlsZUxpc3Q6IFtdLAogICAgICAvLyDlrZjlgqjkuIrkvKDnmoTlm77niYfliJfooagKICAgICAgZGlhbG9nSW1hZ2VVcmw6ICcnLAogICAgICAvLyDlm77niYfpooTop4jnmoQgVVJMCiAgICAgIGRpYWxvZ1Zpc2libGU6IGZhbHNlIC8vIOaOp+WItumihOiniOWvueivneahhueahOaYvuekugoKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBoYW5kbGVQaWN0dXJlUHJldmlldzogZnVuY3Rpb24gaGFuZGxlUGljdHVyZVByZXZpZXcoZmlsZSkgewogICAgICB0aGlzLmRpYWxvZ0ltYWdlVXJsID0gZmlsZS51cmw7CiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWU7CiAgICB9LAogICAgaGFuZGxlUGljdHVyZVJlbW92ZTogZnVuY3Rpb24gaGFuZGxlUGljdHVyZVJlbW92ZShmaWxlLCBmaWxlTGlzdCkgewogICAgICB0aGlzLmZpbGVMaXN0ID0gZmlsZUxpc3Q7CiAgICB9LAogICAgYmVmb3JlUGljdHVyZVJlbW92ZTogZnVuY3Rpb24gYmVmb3JlUGljdHVyZVJlbW92ZShmaWxlLCBmaWxlTGlzdCkgewogICAgICByZXR1cm4gdGhpcy4kY29uZmlybSgiXHU3ODZFXHU1QjlBXHU3OUZCXHU5NjY0ICIuY29uY2F0KGZpbGUubmFtZSwgIlx1RkYxRiIpKTsKICAgIH0sCiAgICBzdWJtaXRBbGw6IGZ1bmN0aW9uIHN1Ym1pdEFsbCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICB0aGlzLmZpbGVMaXN0LmZvckVhY2goZnVuY3Rpb24gKGZpbGUpIHsKICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2ZpbGVzJywgZmlsZS5yYXcpOwogICAgICB9KTsKICAgICAgZm9ybURhdGEuYXBwZW5kKCd0ZXh0JywgdGhpcy50ZXh0VmFsdWUpOwogICAgICBheGlvcy5wb3N0KCdodHRwOi8vbG9jYWxob3N0OjUwMDAvdXBsb2FkX2RhdGEnLCBmb3JtRGF0YSwgewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScKICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5LiK5Lyg5oiQ5Yqf77yBJyk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIF90aGlzLiRtZXNzYWdlLmVycm9yKCfkuIrkvKDlpLHotKXvvIEnKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["news.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AACA;AACA,MAAA,QAAA,EAAA,EAFA;AAEA;AACA,MAAA,cAAA,EAAA,EAHA;AAGA;AACA,MAAA,aAAA,EAAA,KAJA,CAIA;;AAJA,KAAA;AAMA,GARA;AASA,EAAA,OAAA,EAAA;AACA,IAAA,oBADA,gCACA,IADA,EACA;AACA,WAAA,cAAA,GAAA,IAAA,CAAA,GAAA;AACA,WAAA,aAAA,GAAA,IAAA;AACA,KAJA;AAKA,IAAA,mBALA,+BAKA,IALA,EAKA,QALA,EAKA;AACA,WAAA,QAAA,GAAA,QAAA;AACA,KAPA;AAQA,IAAA,mBARA,+BAQA,IARA,EAQA,QARA,EAQA;AACA,aAAA,KAAA,QAAA,oCAAA,IAAA,CAAA,IAAA,YAAA;AACA,KAVA;AAWA,IAAA,SAXA,uBAWA;AAAA;;AACA,UAAA,QAAA,GAAA,IAAA,QAAA,EAAA;AACA,WAAA,QAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,QAAA,CAAA,MAAA,CAAA,OAAA,EAAA,IAAA,CAAA,GAAA;AACA,OAFA;AAGA,MAAA,QAAA,CAAA,MAAA,CAAA,MAAA,EAAA,KAAA,SAAA;AAEA,MAAA,KAAA,CAAA,IAAA,CAAA,mCAAA,EAAA,QAAA,EAAA;AACA,QAAA,OAAA,EAAA;AACA,0BAAA;AADA;AADA,OAAA,EAKA,IALA,CAKA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,OAAA;AACA,OAPA,EAQA,KARA,CAQA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,OAAA;AACA,OAVA;AAWA;AA7BA;AATA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 文本输入框 -->\r\n    <el-input\r\n      type=\"textarea\"\r\n      :rows=\"4\"\r\n      placeholder=\"请输入文本\"\r\n      v-model=\"textValue\">\r\n    </el-input>\r\n\r\n    <!-- 图片上传组件 -->\r\n    <el-upload\r\n      class=\"upload-demo\"\r\n      action=\"http://localhost:5000/upload_image\"\r\n      list-type=\"picture-card\"\r\n      :on-preview=\"handlePicturePreview\"\r\n      :on-remove=\"handlePictureRemove\"\r\n      :before-remove=\"beforePictureRemove\"\r\n      :file-list=\"fileList\"\r\n      multiple\r\n      :auto-upload=\"false\">\r\n      <i class=\"el-icon-plus\"></i>\r\n    </el-upload>\r\n    <el-button type=\"primary\" @click=\"submitAll\">提交所有数据</el-button>\r\n\r\n    <el-dialog :visible.sync=\"dialogVisible\">\r\n      <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"预览图片\" />\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      textValue: '', // 绑定到文本输入框的数据\r\n      fileList: [], // 存储上传的图片列表\r\n      dialogImageUrl: '', // 图片预览的 URL\r\n      dialogVisible: false // 控制预览对话框的显示\r\n    };\r\n  },\r\n  methods: {\r\n    handlePicturePreview(file) {\r\n      this.dialogImageUrl = file.url;\r\n      this.dialogVisible = true;\r\n    },\r\n    handlePictureRemove(file, fileList) {\r\n      this.fileList = fileList;\r\n    },\r\n    beforePictureRemove(file, fileList) {\r\n      return this.$confirm(`确定移除 ${file.name}？`);\r\n    },\r\n    submitAll() {\r\n      const formData = new FormData();\r\n      this.fileList.forEach(file => {\r\n        formData.append('files', file.raw);\r\n      });\r\n      formData.append('text', this.textValue);\r\n\r\n      axios.post('http://localhost:5000/upload_data', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      })\r\n      .then(response => {\r\n        this.$message.success('上传成功！');\r\n      })\r\n      .catch(error => {\r\n        this.$message.error('上传失败！');\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components"}]}